name: Build and Deploy After Action Report

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: checkout aar code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      # Set up Build environment
      - name: Set up JDK 14
        uses: actions/setup-java@v3
        with:
          java-version: '14'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - run: chmod +x ./gradlew
      # Build project
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.3.3
        with:
          arguments: build
      # Run integration tests project
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.3.3
        if: github.ref == 'refs/heads/main'
        env:
         APP_PUBG_TOKEN: ${{ secrets.APP_PUBGTOKEN }}
         APP_DISCORDWEBHOOK: ${{ secrets.APP_DISCORDWEBHOOK }}
         APP_DISCORD_TOKEN: ${{ secrets.APP_DISCORD_TOKEN }}
         SPRING_PROFILES_ACTIVE: test
        with:
         arguments: intTest
      # Set up docker environment
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: github.ref == 'refs/heads/main'
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          username: leinb1dr
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build and push docker
      - name: Build and push report generator
        uses: docker/build-push-action@v3
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          file: Dockerfile-report-generator
          push: true
          tags: leinb1dr/after-action-report:latest
      - name: Build and push discord commands
          uses: docker/build-push-action@v3
          if: github.ref == 'refs/heads/main'
          with:
            context: .
            file: Dockerfile-discord-commands
            push: true
            tags: leinb1dr/discord-commands:latest

      # Tag for ArgoCD to do its thing
      - name: Tag for deploy
        uses: actions/github-script@v3
        if: github.ref == 'refs/heads/main'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
                await github.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/poc"
                })
            } catch (e) {
              console.log("The nightly tag doesn't exist yet: " + e)
            }
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/poc",
              sha: context.sha
            })