name: Build Gradle project

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      # Set up Build environment
      - name: Set up JDK 14
        uses: actions/setup-java@v3
        with:
          java-version: '14'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - run: chmod +x ./gradlew
      # Build project
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.3.3
        env:
          APP_PUBGTOKEN: ${{ secrets.APP_PUBGTOKEN }}
          APP_DISCORDWEBHOOK: ${{ secrets.APP_DISCORDWEBHOOK }}
          SPRING_PROFILES_ACTIVE: test
        with:
          arguments: build
      # Set up docker environment
      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: leinb1dr
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build and push docker
      - name: Build and push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: leinb1dr/after-action-report:latest
      - name: Tag for deploy
        if: github.ref == 'refs/heads/main'
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          gh auth status
          git --version
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git status
          git tag
          git describe
          git tag -l "poc"
          git push origin --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}